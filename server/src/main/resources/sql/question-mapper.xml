<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="info.keik.tiple.repository.QuestionRepository">

  <select id="get" resultMap="get-map">
    SELECT
      q.id,
      q.title,
      q.content,
      q.votes_count,
      q.created_by,
      q.created_at,
      tag.name AS tname
    FROM (
      SELECT
        question.*,
        IFNULL(SUM(vote_for_question.value), 0) as votes_count
      FROM question
      LEFT JOIN vote_for_question ON question.id = vote_for_question.vote_for
      WHERE question.id = #{id}
      GROUP BY question.id
    ) q
    LEFT JOIN question_tag ON q.id = question_tag.question_id
    LEFT JOIN tag ON question_tag.tag_id = tag.id
  </select>
  <resultMap id="get-map" type="info.keik.tiple.model.Question">
    <id property="id" column="id" />
    <result property="title" column="title" />
    <result property="content" column="content" />
    <result property="votesCount" column="votes_count" />
    <result property="createdBy.id" column="created_by" />
    <result property="createdAt" column="created_at" />
    <collection property="tags" ofType="info.keik.tiple.model.Tag">
      <result property="name" column="tname" />
    </collection>
  </resultMap>

  <insert id="add" parameterType="info.keik.tiple.model.Question">
    INSERT INTO question (
      title,
      content,
      created_by
    )
    VALUES (
      #{title},
      #{content},
      #{createdBy.id}
    );
    SET @last_insert_question_id = (SELECT LAST_INSERT_ID());

    <foreach collection="tags" item="tag">
      INSERT INTO tag (
        name
      )
      SELECT
        #{tag.name}
      WHERE NOT EXISTS (
        SELECT name FROM tag WHERE name = #{tag.name}
      );

      INSERT INTO question_tag (
        question_id,
        tag_id
      )
      SELECT
        @last_insert_question_id,
        id
      FROM tag WHERE name = #{tag.name};
    </foreach>

  </insert>

  <select id="search" resultMap="search-map">
    SELECT
      q3.id,
      q3.title,
      q3.content,
      q3.views_count,
      q3.votes_count,
      q3.answers_count,
      q3.created_at,
      q3.created_by,
      tag.name AS tname
    FROM (
      SELECT
        q2.*,
        count(DISTINCT answer.id) as answers_count
      FROM (
        SELECT
          q.*,
          IFNULL(SUM(vote_for_question.value), 0) as votes_count
        FROM (
          SELECT
            question.*
          FROM question
          LEFT JOIN question_tag ON question.id = question_tag.question_id
          LEFT JOIN tag ON question_tag.tag_id = tag.id
          <if test="tagName != null">
            WHERE tag.name = #{tagName}
          </if>
          GROUP BY question.id
          LIMIT #{begin}, #{count}
        ) q
        LEFT JOIN vote_for_question ON q.id = vote_for_question.vote_for
        GROUP BY q.id
      ) q2
      LEFT JOIN answer ON q2.id = answer.answer_for
      GROUP BY q2.id
    ) q3
    LEFT JOIN question_tag ON q3.id = question_tag.question_id
    LEFT JOIN tag ON question_tag.tag_id = tag.id
  </select>
  <resultMap id="search-map" type="info.keik.tiple.model.Question">
    <id property="id" column="id" />
    <result property="title" column="title" />
    <result property="content" column="content" />
    <result property="viewsCount" column="views_count" />
    <result property="votesCount" column="votes_count" />
    <result property="answersCount" column="answers_count" />
    <result property="createdBy.id" column="created_by" />
    <result property="createdAt" column="created_at" />
    <result property="updatedBy.id" column="updated_at" />
    <collection property="tags" ofType="info.keik.tiple.model.Tag">
      <result property="name" column="tname" />
    </collection>
  </resultMap>

  <select id="count" resultType="Integer">
    SELECT COUNT(DISTINCT question.id)
    FROM question
    LEFT JOIN question_tag ON question.id = question_tag.question_id
    LEFT JOIN tag ON question_tag.tag_id = tag.id
    <if test="tagName != null">
      WHERE tag.name = #{tagName}
    </if>
  </select>

  <update id="addViewsCount">
    UPDATE question
    SET views_count = views_count + 1
    WHERE id = #{id};
  </update>

  <select id="getVote" resultType="Integer">
    SELECT value
    FROM vote_for_question
    WHERE vote_for = #{id}
      AND created_by = #{userId}
  </select>

  <insert id="updateVote">
    INSERT INTO vote_for_question (
      vote_for,
      created_by,
      value
    )
    VALUES (
      #{id},
      #{userId},
      #{value}
    )
    ON DUPLICATE KEY UPDATE
      value = #{value}
  </insert>

</mapper>
